<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- отключение security для указанных директорий -->
    <http pattern="/resources/**" security="none"/>
    <http pattern="/webjars/**" security="none"/>

    <!-- добавление фильтра ограничений -->
    <http pattern="/rest/**" use-expressions="true" name="restSecurityFilterChain" create-session="stateless">
        <http-basic/>
        <!-- формирование правил URL: админ должен иметь роль Admin -->
        <!-- все остальные пользователи под rest/ user должны пройти авторизацию -->
        <intercept-url pattern="/rest/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/rest/profile/register" access="isAnonymous()"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <csrf disabled="true"/>
    </http>

    <!-- форма авторизации -->
    <http>
        <intercept-url pattern="/login" access="permitAll()"/>   <!-- адрес, к которому есть доступ всем пользователям -->
        <intercept-url pattern="/profile/register" access="isAnonymous()"/>
        <intercept-url pattern="/**/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
<!--        <form-login/> &lt;!&ndash; стандартная форма Spring для авторизации, если мы её не определили &ndash;&gt;-->
<!--        <logout/>     &lt;!&ndash; стандартная форма log-out &ndash;&gt;-->

        <!-- настройка форм login и logout -->
        <!-- default-target-url - куда будет переадресация после аутентификации -->
        <form-login login-page="/login" default-target-url="/meals"
                    authentication-failure-url="/login?error=true"
                    login-processing-url="/spring_security_check"/>
        <logout logout-success-url="/login"/>

        <csrf disabled="true"/>
    </http>

    <beans:bean name="noopEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>

    <!--provider для сравнения ролей пользователя с заданными значениями для аутентификации -->
    <authentication-manager>
        <authentication-provider user-service-ref="userService">
            <password-encoder ref="noopEncoder"/>
<!--
            // способ аутентификации через получение ролей пользователя из БД
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT email, password, enabled FROM users WHERE email = ?"
                               authorities-by-username-query="
                                                       SELECT u.email, r.role FROM users u, user_roles r WHERE u.id = r.user_id AND u.email = ?"
            />
            <user-service>
                <user name="user@yandex.ru" password="password" authorities="ROLE_USER"/>
                <user name="admin@gmail.com" password="admin" authorities="ROLE_ADMIN"/>
            </user-service>
-->
        </authentication-provider>
    </authentication-manager>
</beans:beans>